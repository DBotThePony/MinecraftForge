--- a/net/minecraft/world/entity/monster/Phantom.java
+++ b/net/minecraft/world/entity/monster/Phantom.java
@@ -152,6 +_,7 @@
       }
 
       this.m_33108_(p_33132_.m_128451_("Size"));
+      this.spawnCause = p_33132_.m_128441_("ForgeSpawnCause") ? p_33132_.m_128342_("ForgeSpawnCause") : null;
    }
 
    public void m_7380_(CompoundTag p_33141_) {
@@ -160,6 +_,7 @@
       p_33141_.m_128405_("AY", this.f_33098_.m_123342_());
       p_33141_.m_128405_("AZ", this.f_33098_.m_123343_());
       p_33141_.m_128405_("Size", this.m_33172_());
+      if (spawnCause != null) p_33141_.m_128362_("ForgeSpawnCause", this.spawnCause);
    }
 
    public boolean m_6783_(double p_33107_) {
@@ -487,5 +_,32 @@
 
          }
       }
+   }
+
+   // Forge start
+   @org.jetbrains.annotations.Nullable
+   private java.util.UUID spawnCause = null;
+
+   /**
+    * This value is only available on the logical server, and will always be null on the client.
+    * @return The UUID of the entity that caused the Phantom to spawn, or null if unknown.
+    */
+   @org.jetbrains.annotations.Nullable
+   public java.util.UUID getSpawnCause()
+   {
+      return this.spawnCause;
+   }
+
+   /**
+    * Sets the spawn cause of this phantom.
+    * <p>
+    * This should be called as soon as possible in the Phantom's lifecycle, to ensure it is present for event handlers.
+    * @param spawnCause The UUID of the entity that caused the Phantom to spawn.
+    * @throws UnsupportedOperationException if the spawn cause has already been set.
+    */
+   public void setSpawnCause(@org.jetbrains.annotations.NotNull java.util.UUID spawnCause)
+   {
+      if (this.spawnCause != null) throw new UnsupportedOperationException("Can not change spawn cause after it has been already set");
+      this.spawnCause = com.google.common.base.Preconditions.checkNotNull(spawnCause, "spawnCause is null");
    }
 }
